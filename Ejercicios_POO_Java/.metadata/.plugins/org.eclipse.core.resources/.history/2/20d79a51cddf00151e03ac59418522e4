package ejercicios;

import java.util.concurrent.ThreadLocalRandom;

import main.Main;;

public class SegundoEjercicio {

	//Falta refactorizar bastantes cosas.
	public static void main(String[] args) {
		
		final int numeroMinimo = 25;
		final int numeroMaximo = 51;
		int[] lista = new int[25];
		double[] auxiliar = new double[4];
		//Inicializamos minimo con el número máximo para que el primer numero que encuentre sea el más pequeño.
		int minimo = numeroMaximo;
		
		for (int i = 0; i < lista.length; i++){
			lista[i] = ThreadLocalRandom.current().nextInt(numeroMinimo, numeroMaximo);
		}
		
		auxiliar[0] = contarPares(lista);
		auxiliar[1] = contarImpares(lista);
		auxiliar[2] = mediaImpares(lista);
		
		for (int item:lista){
			

			if (item < minimo){
				minimo = item;
			}
		}
		auxiliar[2] = auxiliar[2]/auxiliar[1];

		for (int i = 0; i < minimo; i++){
			auxiliar[3] += i;
		}
		
		for (int i = 0; i < lista.length; i++) {
            System.out.println("Posicion " + i + " de la lista = " + lista[i]);
        }
        System.out.println();

        System.out.println("Numero de elementos pares: " + (int)auxiliar[0]);
        System.out.println("Numero de elementos impares: " + (int)auxiliar[1]);
        System.out.println("Media impares: " + auxiliar[2]);
        System.out
                .println("Suma de lso enteros comprendidos entre 1 y el minimo de la lista: "
                        + auxiliar[3]);

        System.out.println("Fin del ejercicio");
		Main.main(null);
	}
	
	private static double contarPares(int[] lista){
		
		int contador = 0;
		
		for (int item:lista){
			if (item%2 == 0){
				contador++;
			}
		}
		return contador;
	}
	
private static double contarImpares(int[] lista){
		
		int contador = 0;
		
		for (int item:lista){
			if (item%2 == 1){
				contador++;
			}
		}
		return contador;
	}

private static double mediaImpares(int[] lista){
	
	int total = 0;
	int contador = 0;
	int media = 0 ;
	
	for (int item:lista){
		if (item%2 == 1){
			contador++;
			total += item;
		}
	}
	media = total/contador;
	return media;
}

}
